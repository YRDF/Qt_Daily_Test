stylesheet界面美化
Json数据解析
HTTP通信
自定义控件绘制温度
多控件
代码整合调试能力

1.label的stylesheet设置：
在设置label结合时，如果设置圆滑边角则可使用：border-radius:7px;
设置两个label结合可以使用verticalLayout，对2个label的底部和顶部设置：
    底部label：
    border-top-left-radius:0px;
    border-top-right-radius:0px;
    顶部label：
    border-bottom-left-radius:0px;
    border-bottom-right-radius:0px;
但是如果这样设置，两个label结合时无论如何设置verticalLayout的spacing，两个label中都会有空隙
那么在两个label中设置:margin: -1px;可以避免这种空隙。

2.限制缩小增大窗口并且隐藏Widget自带的title：    
	setFixedSize(361,597);
    	setWindowFlag(Qt::FramelessWindowHint);

3.在QMenu中添加QAction，可以实现快速的action
一个QAction可以绑定多个触发逻辑(槽函数)，统一管理界面元素的交互。

4.获取当前widget在屏幕中的坐标：qDebug()<<this->pos();
获取当前鼠标在屏幕中的坐标：qDebug()<<event->globalPosition();
在Qt6中这两个有可能返回的是QFPoint函数，如果要调用this->move(),返回值要相同。所以要.toPoint()进行转换。
可以根据这两个位置，依靠鼠标移动和鼠标按下事件，实现按着鼠标移动窗口的功能。

5.Qt的hTTP编程，详见Qt_HTTP_learn